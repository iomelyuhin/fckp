"use strict";document.addEventListener("DOMContentLoaded",(function(){document.querySelector(".js__addNewsSlider")&&function(e,t,n,s,r,i,a,d,c){var o=document.querySelector(e),l=o.querySelector(t),u=o.querySelector(n),v=o.querySelectorAll(s),m=o.querySelector(r),f=m.children[0],L=m.children[1],h=m.children[2],g=u.offsetWidth,p=document.querySelector(i),y=0,S=0,x=0,E=0,_=0,b=0,q=0,w=!1,j=!1,N=!0,A=!0,M=0,k=0,X=(v.length-1)*g,Y=.35*v[0].offsetWidth,C=/([-0-9.]+(?=px))/,W=function(){return-1!==event.type.search("touch")?event.touches[0]:event},D=function(){A&&(u.style.transition="transform .5s"),u.style.transform="translate3d(-".concat(y*g,"px, 0px, 0px)"),f.classList.toggle("disabled",0==y),h.classList.toggle("disabled",y==v.length-1),B(y)},H=function(){var e=W();N&&(A=!0,M=(y+1)*-g,k=(y-1)*-g,S=x=e.clientX,_=e.clientY,u.style.transition="",document.addEventListener("touchmove",I),document.addEventListener("mousemove",I),document.addEventListener("touchend",O),document.addEventListener("mouseup",O),l.classList.remove("grab"),l.classList.add("grabbing")),B(y)},I=function(){var e=W(),t=+u.style.transform.match(C)[0];if(E=x-e.clientX,x=e.clientX,b=_-e.clientY,_=e.clientY,!w&&!j){var n=Math.abs(b);n>7||0==E?(j=!0,N=!1):n<7&&(w=!0)}if(w){if(0==y){if(S<x)return void T(t,0);N=!0}if(y===v.length-1){if(S>x)return void T(t,X);N=!0}if(S>x&&t<M||S<x&&t>k)return void z();u.style.transform="translate3d(".concat(t-E,"px, 0px, 0px)")}B(y)},O=function e(){q=S-x,j=!1,w=!1,document.removeEventListener("touchmove",I),document.removeEventListener("mousemove",I),document.removeEventListener("touchend",e),document.removeEventListener("mouseup",e),l.classList.add("grab"),l.classList.remove("grabbing"),N?(Math.abs(q)>Y&&(S<x?y--:S>x&&y++),S!==x?(N=!1,D()):N=!0):N=!0,B(y)},T=function(e,t){e>=t&&e>t&&(u.style.transform="translate3d(".concat(t,"px, 0px, 0px)")),N=!1,B(y)},z=function(){A=!1,O(),N=!0,B(y)};function B(e){o.querySelectorAll("."+a).forEach((function(t){t.classList.remove("active"),t.dataset.slideIndex==e&&t.classList.add("active")}))}u.style.transform="translate3d(0px, 0px, 0px)",l.classList.add("grab"),u.addEventListener("transitionend",(function(){N=!0,L.innerHTML="".concat(y+1,"/").concat(v.length)})),o.addEventListener("touchstart",(function(e){return H()})),o.addEventListener("mousedown",(function(e){return H()})),m.addEventListener("click",(function(e){var t=e.target;if(t.classList.contains("next"))y++;else{if(!t.classList.contains("prev"))return;y--}D(),B(y)})),o.querySelector(i)&&o.querySelector(i).addEventListener("click",(function(e){o.querySelectorAll("."+a).forEach((function(e){e.classList.remove("active")})),y=e.target.getAttribute("data-slide-index"),e.target.classList.add("active"),D()}));for(var F=0;F<v.length;F++){var G=document.createElement("button");G.classList.add(d),G.classList.add(a),G.setAttribute("data-slide-index",F),p.appendChild(G)}document.querySelectorAll("."+a)[0].classList.add("active")}(".js__addNewsSlider",".js__addNewsSlider-list",".js__addNewsSlider-track",".js__addNewsSlide",".js__addNewsSlider-arrows",".js__addNewsSlider-pagination","js_addNews-dot","additional-news__slider-pagination-item")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
