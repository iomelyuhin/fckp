"use strict";document.addEventListener("DOMContentLoaded",(function(){function e(e,t,n,s,r){var i=document.querySelector(e),a=i.querySelector(t),o=i.querySelector(n),c=i.querySelectorAll(s),d=i.querySelector(r),l=d.children[0],u=d.children[1],v=d.children[2],m=c[0].offsetWidth,f=0,_=0,L=0,p=0,g=0,h=0,y=0,j=!1,x=!1,E=!0,b=!0,q=0,S=0,A=(c.length-1)*m,k=.35*c[0].offsetWidth,M=/([-0-9.]+(?=px))/,w=function(){return-1!==event.type.search("touch")?event.touches[0]:event},X=function(){b&&(o.style.transition="transform .5s"),o.style.transform="translate3d(-".concat(f*m,"px, 0px, 0px)"),l.classList.toggle("disabled",0==f),v.classList.toggle("disabled",f==c.length-1),I(f)},Y=function(){var e=w();E&&(b=!0,q=(f+1)*-m,S=(f-1)*-m,_=L=e.clientX,g=e.clientY,o.style.transition="",document.addEventListener("touchmove",W),document.addEventListener("mousemove",W),document.addEventListener("touchend",C),document.addEventListener("mouseup",C),a.classList.remove("grab"),a.classList.add("grabbing")),I(f)},W=function(){var e=w(),t=+o.style.transform.match(M)[0];if(p=L-e.clientX,L=e.clientX,h=g-e.clientY,g=e.clientY,!j&&!x){var n=Math.abs(h);n>7||0==p?(x=!0,E=!1):n<7&&(j=!0)}if(j){if(0==f){if(_<L)return void D(t,0);E=!0}if(f===c.length-1){if(_>L)return void D(t,A);E=!0}if(_>L&&t<q||_<L&&t>S)return void H();o.style.transform="translate3d(".concat(t-p,"px, 0px, 0px)")}I(f)},C=function e(){y=_-L,x=!1,j=!1,document.removeEventListener("touchmove",W),document.removeEventListener("mousemove",W),document.removeEventListener("touchend",e),document.removeEventListener("mouseup",e),a.classList.add("grab"),a.classList.remove("grabbing"),E?(Math.abs(y)>k&&(_<L?f--:_>L&&f++),_!==L?(E=!1,X()):E=!0):E=!0,I(f)},D=function(e,t){e>=t&&e>t&&(o.style.transform="translate3d(".concat(t,"px, 0px, 0px)")),E=!1,I(f)},H=function(){b=!1,C(),E=!0,I(f)};function I(e){i.querySelectorAll(".js_dot").forEach((function(t){t.classList.remove("active"),t.dataset.slideIndex==e&&t.classList.add("active")}))}o.style.transform="translate3d(0px, 0px, 0px)",a.classList.add("grab"),o.addEventListener("transitionend",(function(){E=!0,u.innerHTML="".concat(f+1,"/").concat(c.length)})),i.addEventListener("touchstart",(function(e){return Y()})),i.addEventListener("mousedown",(function(e){return Y()})),d.addEventListener("click",(function(e){var t=e.target;if(t.classList.contains("next"))f++;else{if(!t.classList.contains("prev"))return;f--}X(),I(f)})),i.querySelector(".js__slider-pagination")&&i.querySelector(".js__slider-pagination").addEventListener("click",(function(e){i.querySelectorAll(".js_dot").forEach((function(e){e.classList.remove("active")})),f=e.target.getAttribute("data-slide-index"),e.target.classList.add("active"),X()}))}if(document.querySelector(".js__slider")){e(".js__slider",".js__slider-list",".js__slider-track",".js__slide",".js__slider-arrows");for(var t=document.querySelectorAll(".js__slide"),n=document.querySelector(".js__slider-pagination"),s=0;s<t.length;s++){var r=document.createElement("button");r.classList.add("hero__slider-pagination-item"),r.classList.add("js_dot"),r.setAttribute("data-slide-index",s),n.append(r)}document.querySelectorAll(".js_dot")[0].classList.add("active")}document.querySelector(".js__partners-slider")&&e(".js__partners-slider",".js__partners-slider-list",".js__partners-slider-track",".js__partners-slide",".js__partners-slider-arrows")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
