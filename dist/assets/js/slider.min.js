<<<<<<< HEAD
"use strict";document.addEventListener("DOMContentLoaded",(function(){function e(e,t,s,n,r,i,a,c){var d=document.querySelector(e),o=d.querySelector(t),l=d.querySelector(s),u=d.querySelectorAll(n),_=d.querySelector(r),m=_.children[0],v=_.children[1],f=_.children[2],p=u[0].offsetWidth,j=document.querySelector(i),L=0,g=0,h=0,y=0,S=0,x=0,E=0,q=!1,b=!1,w=!0,k=!0,A=0,M=0,X=(u.length-1)*p,Y=.35*u[0].offsetWidth,W=/([-0-9.]+(?=px))/,C=function(){return-1!==event.type.search("touch")?event.touches[0]:event},D=function(){k&&(l.style.transition="transform .5s"),l.style.transform="translate3d(-".concat(L*p,"px, 0px, 0px)"),m.classList.toggle("disabled",0==L),f.classList.toggle("disabled",L==u.length-1),B(L)},H=function(){var e=C();w&&(k=!0,A=(L+1)*-p,M=(L-1)*-p,g=h=e.clientX,S=e.clientY,l.style.transition="",document.addEventListener("touchmove",I),document.addEventListener("mousemove",I),document.addEventListener("touchend",O),document.addEventListener("mouseup",O),o.classList.remove("grab"),o.classList.add("grabbing")),B(L)},I=function(){var e=C(),t=+l.style.transform.match(W)[0];if(y=h-e.clientX,h=e.clientX,x=S-e.clientY,S=e.clientY,!q&&!b){var s=Math.abs(x);s>7||0==y?(b=!0,w=!1):s<7&&(q=!0)}if(q){if(0==L){if(g<h)return void T(t,0);w=!0}if(L===u.length-1){if(g>h)return void T(t,X);w=!0}if(g>h&&t<A||g<h&&t>M)return void z();l.style.transform="translate3d(".concat(t-y,"px, 0px, 0px)")}B(L)},O=function e(){E=g-h,b=!1,q=!1,document.removeEventListener("touchmove",I),document.removeEventListener("mousemove",I),document.removeEventListener("touchend",e),document.removeEventListener("mouseup",e),o.classList.add("grab"),o.classList.remove("grabbing"),w?(Math.abs(E)>Y&&(g<h?L--:g>h&&L++),g!==h?(w=!1,D()):w=!0):w=!0,B(L)},T=function(e,t){e>=t&&e>t&&(l.style.transform="translate3d(".concat(t,"px, 0px, 0px)")),w=!1,B(L)},z=function(){k=!1,O(),w=!0,B(L)};function B(e){d.querySelectorAll("."+a).forEach((function(t){t.classList.remove("active"),t.dataset.slideIndex==e&&t.classList.add("active")}))}l.style.transform="translate3d(0px, 0px, 0px)",o.classList.add("grab"),l.addEventListener("transitionend",(function(){w=!0,v.innerHTML="".concat(L+1,"/").concat(u.length)})),d.addEventListener("touchstart",(function(e){return H()})),d.addEventListener("mousedown",(function(e){return H()})),_.addEventListener("click",(function(e){var t=e.target;if(t.classList.contains("next"))L++;else{if(!t.classList.contains("prev"))return;L--}D(),B(L)})),d.querySelector(i)&&d.querySelector(i).addEventListener("click",(function(e){d.querySelectorAll("."+a).forEach((function(e){e.classList.remove("active")})),L=e.target.getAttribute("data-slide-index"),e.target.classList.add("active"),D()}));for(var F=0;F<u.length;F++){var G=document.createElement("button");G.classList.add(c),G.classList.add(a),G.setAttribute("data-slide-index",F),j.append(G)}document.querySelectorAll("."+a)[0].classList.add("active")}document.querySelector(".js__slider")&&e(".js__slider",".js__slider-list",".js__slider-track",".js__slide",".js__slider-arrows",".js__slider-pagination","js_dot","hero__slider-pagination-item"),document.querySelector(".js__news-slider")&&e(".js__news-slider",".js__news-slider-list",".js__news-slider-track",".js__news-slide",".js__news-slider-arrows",".js__news-slider-pagination","js_news-dot","news__slider-pagination-item"),document.querySelector(".js__product-slider")&&e(".js__product-slider",".js__product-slider-list",".js__product-slider-track",".js__product-slide",".js__product-slider-arrows",".js__product-slider-pagination","js_product-dot","product__slider-pagination-item"),document.querySelector(".js__casesSlider")&&e(".js__casesSlider",".js__casesSlider-list",".js__casesSlider-track",".js__casesSlide",".js__casesSlider-arrows",".js__casesSlider-pagination","js_cases-dot","cases__slider-pagination-item")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzbGlkZXJSdW4iLCJqc3NsaWRlciIsImpzc2xpZGVyTGlzdCIsImpzc2xpZGVyVHJhY2siLCJqc3NsaWRlcyIsImpzYXJyb3dzIiwianNwYWdpbmF0aW9uIiwiZG90c25hbWUiLCJkb3RzQ2xhc3MiLCJzbGlkZXIiLCJxdWVyeVNlbGVjdG9yIiwic2xpZGVyTGlzdCIsInNsaWRlclRyYWNrIiwic2xpZGVzIiwicXVlcnlTZWxlY3RvckFsbCIsImFycm93cyIsInByZXYiLCJjaGlsZHJlbiIsImluZGV4U2xpZGVUZXh0IiwibmV4dCIsInNsaWRlV2lkdGgiLCJvZmZzZXRXaWR0aCIsInBhZ2luYXRpb24iLCJzbGlkZUluZGV4IiwicG9zSW5pdCIsInBvc1gxIiwicG9zWDIiLCJwb3NZMSIsInBvc1kyIiwicG9zRmluYWwiLCJpc1N3aXBlIiwiaXNTY3JvbGwiLCJhbGxvd1N3aXBlIiwidHJhbnNpdGlvbiIsIm5leHRUcmYiLCJwcmV2VHJmIiwibGFzdFRyZiIsImxlbmd0aCIsInBvc1RocmVzaG9sZCIsInRyZlJlZ0V4cCIsImdldEV2ZW50IiwiZXZlbnQiLCJ0eXBlIiwic2VhcmNoIiwidG91Y2hlcyIsInNsaWRlIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJjb25jYXQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJzd2l0Y2hEb3RzIiwic3dpcGVTdGFydCIsImV2dCIsImNsaWVudFgiLCJjbGllbnRZIiwic3dpcGVBY3Rpb24iLCJzd2lwZUVuZCIsInJlbW92ZSIsImFkZCIsIm1hdGNoIiwicG9zWSIsIk1hdGgiLCJhYnMiLCJzZXRUcmFuc2Zvcm0iLCJyZWFjaEVkZ2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29tYXByZVRyYW5zZm9ybSIsImluZGV4IiwiZm9yRWFjaCIsImRvdCIsImRhdGFzZXQiLCJpbm5lckhUTUwiLCJ0YXJnZXQiLCJjb250YWlucyIsImUi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cUJBQUEsNkJBQUEsaUNBQUEsaUJBQUEsbUNBYVRGLFNBQVNZLGNBQVQscUJBQ0ZWLEVBQVMsbUJBQUEsd0JBQUEseUJBQUEsa0JBQUEsMEJBQUEsOEJBQUEsZUFBQSIsImZpbGUiOiJzbGlkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKGBET01Db250ZW50TG9hZGVkYCwgZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBzbGlkZXJSdW4oXG5cdFx0anNzbGlkZXIsIFxuXHRcdGpzc2xpZGVyTGlzdCwgXG5cdFx0anNzbGlkZXJUcmFjaywgXG5cdFx0anNzbGlkZXMsIFxuXHRcdGpzYXJyb3dzLFxuXHRcdGpzcGFnaW5hdGlvbixcblx0XHRkb3RzbmFtZSxcblx0XHRkb3RzQ2xhc3MpIHtcbiAgICBjb25zdCBzbGlkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpzc2xpZGVyKVxuICAgIGNvbnN0IHNsaWRlckxpc3QgPSBzbGlkZXIucXVlcnlTZWxlY3Rvcihqc3NsaWRlckxpc3QpXG4gICAgY29uc3Qgc2xpZGVyVHJhY2sgPSBzbGlkZXIucXVlcnlTZWxlY3Rvcihqc3NsaWRlclRyYWNrKVxuICAgIGNvbnN0IHNsaWRlcyA9IHNsaWRlci5xdWVyeVNlbGVjdG9yQWxsKGpzc2xpZGVzKVxuICAgIGNvbnN0IGFycm93cyA9IHNsaWRlci5xdWVyeVNlbGVjdG9yKGpzYXJyb3dzKVxuICAgIGNvbnN0IHByZXYgPSBhcnJvd3MuY2hpbGRyZW5bMF1cbiAgICBjb25zdCBpbmRleFNsaWRlVGV4dCA9IGFycm93cy5jaGlsZHJlblsxXVxuICAgIGNvbnN0IG5leHQgPSBhcnJvd3MuY2hpbGRyZW5bMl1cbiAgICBjb25zdCBzbGlkZVdpZHRoID0gc2xpZGVzWzBdLm9mZnNldFdpZHRoXG4gICAgY29uc3QgcGFnaW5hdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoanNwYWdpbmF0aW9uKVxuICAgIGxldCBzbGlkZUluZGV4ID0gMFxuICAgIGxldCBwb3NJbml0ID0gMFxuICAgIGxldCBwb3NYMSA9IDBcbiAgICBsZXQgcG9zWDIgPSAwXG4gICAgbGV0IHBvc1kxID0gMFxuICAgIGxldCBwb3NZMiA9IDBcbiAgICBsZXQgcG9zRmluYWwgPSAwXG4gICAgbGV0IGlzU3dpcGUgPSBmYWxzZVxuICAgIGxldCBpc1Njcm9sbCA9IGZhbHNlXG4gICAgbGV0IGFsbG93U3dpcGUgPSB0cnVlXG4gICAgbGV0IHRyYW5zaXRpb24gPSB0cnVlXG4gICAgbGV0IG5leHRUcmYgPSAwXG4gICAgbGV0IHByZXZUcmYgPSAwXG4gICAgY29uc3QgbGFzdFRyZiA9IChzbGlkZXMubGVuZ3RoIC0gMSkgKiBzbGlkZVdpZHRoXG4gICAgY29uc3QgcG9zVGhyZXNob2xkID0gc2xpZGVzWzBdLm9mZnNldFdpZHRoICogMC4zNVxuICAgIGNvbnN0IHRyZlJlZ0V4cCA9IC8oWy0wLTkuXSsoPz1weCkpL1xuICAgIGNvbnN0IGdldEV2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGV2ZW50LnR5cGUuc2VhcmNoKGB0b3VjaGApICE9PSAtMSA/IGV2ZW50LnRvdWNoZXNbMF0gOiBldmVudFxuICAgIH1cbiAgICBjb25zdCBzbGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XG4gICAgICAgIHNsaWRlclRyYWNrLnN0eWxlLnRyYW5zaXRpb24gPSBgdHJhbnNmb3JtIC41c2BcbiAgICAgIH1cbiAgICAgIHNsaWRlclRyYWNrLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgtJHtcbiAgICAgICAgc2xpZGVJbmRleCAqIHNsaWRlV2lkdGhcbiAgICAgIH1weCwgMHB4LCAwcHgpYFxuXG4gICAgICBwcmV2LmNsYXNzTGlzdC50b2dnbGUoYGRpc2FibGVkYCwgc2xpZGVJbmRleCA9PSAwKVxuICAgICAgbmV4dC5jbGFzc0xpc3QudG9nZ2xlKGBkaXNhYmxlZGAsIHNsaWRlSW5kZXggPT0gKHNsaWRlcy5sZW5ndGggLSAxKSlcbiAgICAgIHN3aXRjaERvdHMoc2xpZGVJbmRleClcblxuICAgIH1cbiAgICBjb25zdCBzd2lwZVN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IGV2dCA9IGdldEV2ZW50KCk7XG5cbiAgICAgIGlmIChhbGxvd1N3aXBlKSB7XG4gICAgICAgIHRyYW5zaXRpb24gPSB0cnVlO1xuXG4gICAgICAgIG5leHRUcmYgPSAoc2xpZGVJbmRleCArIDEpICogLXNsaWRlV2lkdGg7XG4gICAgICAgIHByZXZUcmYgPSAoc2xpZGVJbmRleCAtIDEpICogLXNsaWRlV2lkdGg7XG5cbiAgICAgICAgcG9zSW5pdCA9IHBvc1gxID0gZXZ0LmNsaWVudFg7XG4gICAgICAgIHBvc1kxID0gZXZ0LmNsaWVudFk7XG5cbiAgICAgICAgc2xpZGVyVHJhY2suc3R5bGUudHJhbnNpdGlvbiA9IFwiXCI7XG5cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCBzd2lwZUFjdGlvbik7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgc3dpcGVBY3Rpb24pO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgc3dpcGVFbmQpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBzd2lwZUVuZCk7XG5cbiAgICAgICAgc2xpZGVyTGlzdC5jbGFzc0xpc3QucmVtb3ZlKFwiZ3JhYlwiKTtcbiAgICAgICAgc2xpZGVyTGlzdC5jbGFzc0xpc3QuYWRkKFwiZ3JhYmJpbmdcIik7XG5cdFx0XHR9XG5cdFx0XHRzd2l0Y2hEb3RzKHNsaWRlSW5kZXgpXG5cdFx0XHRcbiAgICB9O1xuICAgIGNvbnN0IHN3aXBlQWN0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3QgZXZ0ID0gZ2V0RXZlbnQoKVxuICAgICAgY29uc3Qgc3R5bGUgPSBzbGlkZXJUcmFjay5zdHlsZS50cmFuc2Zvcm1cbiAgICAgIGNvbnN0IHRyYW5zZm9ybSA9ICtzdHlsZS5tYXRjaCh0cmZSZWdFeHApWzBdXG5cbiAgICAgIHBvc1gyID0gcG9zWDEgLSBldnQuY2xpZW50WFxuICAgICAgcG9zWDEgPSBldnQuY2xpZW50WFxuXG4gICAgICBwb3NZMiA9IHBvc1kxIC0gZXZ0LmNsaWVudFlcbiAgICAgIHBvc1kxID0gZXZ0LmNsaWVudFlcblxuICAgICAgLy8g0L7Qv9GA0LXQtNC10LvQtdC90LjQtSDQtNC10LnRgdGC0LLQuNGPINGB0LLQsNC50L8g0LjQu9C4INGB0LrRgNC+0LvQu1xuICAgICAgaWYgKCFpc1N3aXBlICYmICFpc1Njcm9sbCkge1xuICAgICAgICBjb25zdCBwb3NZID0gTWF0aC5hYnMocG9zWTIpXG4gICAgICAgIGlmIChwb3NZID4gNyB8fCBwb3NYMiA9PSAwKSB7XG4gICAgICAgICAgaXNTY3JvbGwgPSB0cnVlXG4gICAgICAgICAgYWxsb3dTd2lwZSA9IGZhbHNlXG4gICAgICAgIH0gZWxzZSBpZiAocG9zWSA8IDcpIHtcbiAgICAgICAgICBpc1N3aXBlID0gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc1N3aXBlKSB7XG4gICAgICAgIC8vINC30LDQv9GA0LXRgiDRg9GF0L7QtNCwINCy0LvQtdCy0L4g0L3QsCDQv9C10YDQstC+0Lwg0YHQu9Cw0LnQtNC1XG4gICAgICAgIGlmIChzbGlkZUluZGV4ID09IDApIHtcbiAgICAgICAgICBpZiAocG9zSW5pdCA8IHBvc1gxKSB7XG4gICAgICAgICAgICBzZXRUcmFuc2Zvcm0odHJhbnNmb3JtLCAwKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFsbG93U3dpcGUgPSB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cblxuICAgICAgICAvLyDQt9Cw0L/RgNC10YIg0YPRhdC+0LTQsCDQstC/0YDQsNCy0L4g0L3QsCDQv9C+0YHQu9C10LTQvdC10Lwg0YHQu9Cw0LnQtNC1XG4gICAgICAgIGlmIChzbGlkZUluZGV4ID09PSAoc2xpZGVzLmxlbmd0aCAtIDEpKSB7XG4gICAgICAgICAgaWYgKHBvc0luaXQgPiBwb3NYMSkge1xuICAgICAgICAgICAgc2V0VHJhbnNmb3JtKHRyYW5zZm9ybSwgbGFzdFRyZilcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhbGxvd1N3aXBlID0gdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC30LDQv9GA0LXRgiDQv9GA0L7RgtCw0YHQutC40LLQsNC90LjRjyDQtNCw0LvRjNGI0LUg0L7QtNC90L7Qs9C+INGB0LvQsNC50LTQsFxuICAgICAgICBpZiAoXG4gICAgICAgICAgKHBvc0luaXQgPiBwb3NYMSAmJiB0cmFuc2Zvcm0gPCBuZXh0VHJmKSB8fFxuICAgICAgICAgICAgKHBvc0luaXQgPCBwb3NYMSAmJiB0cmFuc2Zvcm0gPiBwcmV2VHJmKVxuICAgICAgICApIHtcbiAgICAgICAgICByZWFjaEVkZ2UoKVxuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgLy8g0LTQstC40LPQsNC10Lwg0YHQu9Cw0LnQtFxuICAgICAgICBzbGlkZXJUcmFjay5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoJHtcbiAgICAgICAgICB0cmFuc2Zvcm0gLSBwb3NYMlxuICAgICAgICB9cHgsIDBweCwgMHB4KWBcblx0XHRcdH1cblx0XHRcdHN3aXRjaERvdHMoc2xpZGVJbmRleClcblx0XHRcdFxuICAgIH1cbiAgICBjb25zdCBzd2lwZUVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHBvc0ZpbmFsID0gcG9zSW5pdCAtIHBvc1gxXG5cbiAgICAgIGlzU2Nyb2xsID0gZmFsc2VcbiAgICAgIGlzU3dpcGUgPSBmYWxzZVxuXG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGB0b3VjaG1vdmVgLCBzd2lwZUFjdGlvbilcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoYG1vdXNlbW92ZWAsIHN3aXBlQWN0aW9uKVxuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihgdG91Y2hlbmRgLCBzd2lwZUVuZClcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoYG1vdXNldXBgLCBzd2lwZUVuZClcblxuICAgICAgc2xpZGVyTGlzdC5jbGFzc0xpc3QuYWRkKGBncmFiYClcbiAgICAgIHNsaWRlckxpc3QuY2xhc3NMaXN0LnJlbW92ZShgZ3JhYmJpbmdgKVxuXG4gICAgICBpZiAoYWxsb3dTd2lwZSkge1xuICAgICAgICBpZiAoTWF0aC5hYnMocG9zRmluYWwpID4gcG9zVGhyZXNob2xkKSB7XG4gICAgICAgICAgaWYgKHBvc0luaXQgPCBwb3NYMSkge1xuICAgICAgICAgICAgc2xpZGVJbmRleC0tXG4gICAgICAgICAgfSBlbHNlIGlmIChwb3NJbml0ID4gcG9zWDEpIHtcbiAgICAgICAgICAgIHNsaWRlSW5kZXgrK1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwb3NJbml0ICE9PSBwb3NYMSkge1xuICAgICAgICAgIGFsbG93U3dpcGUgPSBmYWxzZVxuICAgICAgICAgIHNsaWRlKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhbGxvd1N3aXBlID0gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbGxvd1N3aXBlID0gdHJ1ZVxuXHRcdFx0fVxuXHRcdFx0c3dpdGNoRG90cyhzbGlkZUluZGV4KVxuICAgIH1cbiAgICBjb25zdCBzZXRUcmFuc2Zvcm0gPSBmdW5jdGlvbiAodHJhbnNmb3JtLCBjb21hcHJlVHJhbnNmb3JtKSB7XG4gICAgICBpZiAodHJhbnNmb3JtID49IGNvbWFwcmVUcmFuc2Zvcm0pIHtcbiAgICAgICAgaWYgKHRyYW5zZm9ybSA+IGNvbWFwcmVUcmFuc2Zvcm0pIHtcbiAgICAgICAgICBzbGlkZXJUcmFjay5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoJHtjb21hcHJlVHJhbnNmb3JtfXB4LCAwcHgsIDBweClgXG4gICAgICAgIH1cbiAgICAgIH1cblx0XHRcdGFsbG93U3dpcGUgPSBmYWxzZVxuXHRcdFx0c3dpdGNoRG90cyhzbGlkZUluZGV4KVxuXHRcdFx0XG4gICAgfVxuICAgIGNvbnN0IHJlYWNoRWRnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRyYW5zaXRpb24gPSBmYWxzZVxuICAgICAgc3dpcGVFbmQoKVxuXHRcdFx0YWxsb3dTd2lwZSA9IHRydWVcblx0XHRcdHN3aXRjaERvdHMoc2xpZGVJbmRleClcblx0XHRcdFxuICAgIH1cblxuICAgIHNsaWRlclRyYWNrLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KWBcbiAgICBzbGlkZXJMaXN0LmNsYXNzTGlzdC5hZGQoYGdyYWJgKVxuXG4gICAgc2xpZGVyVHJhY2suYWRkRXZlbnRMaXN0ZW5lcihgdHJhbnNpdGlvbmVuZGAsICgpID0+IHtcbiAgICAgIGFsbG93U3dpcGUgPSB0cnVlXG4gICAgICBpbmRleFNsaWRlVGV4dC5pbm5lckhUTUwgPSBgJHtzbGlkZUluZGV4ICsgMX0vJHtzbGlkZXMubGVuZ3RofWBcblxuICAgIH0pXG4gICAgc2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoYHRvdWNoc3RhcnRgLCAoZXZlbnQpID0+IHN3aXBlU3RhcnQoZXZlbnQpKVxuICAgIHNsaWRlci5hZGRFdmVudExpc3RlbmVyKGBtb3VzZWRvd25gLCAoZXZlbnQpID0+IHN3aXBlU3RhcnQoZXZlbnQpKVxuXG4gICAgYXJyb3dzLmFkZEV2ZW50TGlzdGVuZXIoYGNsaWNrYCwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXRcbiAgICAgIC8vIGNvbnNvbGUubG9nKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QpXG5cbiAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGBuZXh0YCkpIHtcbiAgICAgICAgc2xpZGVJbmRleCsrXG4gICAgICB9IGVsc2UgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYHByZXZgKSkge1xuICAgICAgICBzbGlkZUluZGV4LS1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG5cdFx0XHRzbGlkZSgpXG5cdFx0XHRzd2l0Y2hEb3RzKHNsaWRlSW5kZXgpXG5cdFx0XHRcbiAgICAgIC8vIGluZGV4U2xpZGVUZXh0LmlubmVySFRNTCA9IGAke3NsaWRlSW5kZXggKyAxfS8ke3NsaWRlcy5sZW5ndGh9YDtcblxuICAgIH0pXG5cbiAgICBpZiAoc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoanNwYWdpbmF0aW9uKSkge1xuXG4gICAgICBzbGlkZXIucXVlcnlTZWxlY3Rvcihqc3BhZ2luYXRpb24pLmFkZEV2ZW50TGlzdGVuZXIoYGNsaWNrYCwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgY29uc3QgZG90dHMgPSBzbGlkZXIucXVlcnlTZWxlY3RvckFsbCgnLicgKyBkb3RzbmFtZSlcbiAgICAgICAgZG90dHMuZm9yRWFjaCgoZG90KSA9PiB7XG4gICAgICAgICAgZG90LmNsYXNzTGlzdC5yZW1vdmUoYGFjdGl2ZWApXG4gICAgICAgIH0pXG4gICAgICAgIHNsaWRlSW5kZXggPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoYGRhdGEtc2xpZGUtaW5kZXhgKVxuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKGBhY3RpdmVgKVxuICAgICAgICBzbGlkZSgpXG4gICAgICB9KVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN3aXRjaERvdHMoaW5kZXgpIHtcbiAgICAgIGNvbnN0IGRvdHRzID0gc2xpZGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy4nICsgZG90c25hbWUpXG4gICAgICBkb3R0cy5mb3JFYWNoKChkb3QpID0+IHtcbiAgICAgICAgZG90LmNsYXNzTGlzdC5yZW1vdmUoYGFjdGl2ZWApXG4gICAgICAgIGlmIChkb3QuZGF0YXNldC5zbGlkZUluZGV4ID09IGluZGV4KSB7XG4gICAgICAgICAgZG90LmNsYXNzTGlzdC5hZGQoYGFjdGl2ZWApXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuXHRcdC8vIGluZGV4U2xpZGVUZXh0LmlubmVySFRNTCA9IGAke3NsaWRlSW5kZXggKyAxfS8ke3NsaWRlcy5sZW5ndGh9YDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkrKykge1xuXG4gICAgICBjb25zdCBkb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBidXR0b25gKVxuICAgICAgZG90LmNsYXNzTGlzdC5hZGQoZG90c0NsYXNzKVxuICAgICAgZG90LmNsYXNzTGlzdC5hZGQoZG90c25hbWUpXG4gICAgICBkb3Quc2V0QXR0cmlidXRlKGBkYXRhLXNsaWRlLWluZGV4YCwgaSlcbiAgICAgIHBhZ2luYXRpb24uYXBwZW5kKGRvdClcbiAgICB9XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLicrZG90c25hbWUpWzBdLmNsYXNzTGlzdC5hZGQoYGFjdGl2ZWApXG5cdH1cblx0XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyA9PT09PT09PT09PT09PT09PT09PdCS0YvQt9C+0LIg0YHQu9Cw0LnQtNC10YDQvtCyPT09PT09PT09PT09PT09PT1cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICHRgdC70LDQudC00LXRgCDQvdCwINCz0LvQsNCy0L3QvtC5IGhlcm9cbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuanNfX3NsaWRlcmApKSB7XG5cdHNsaWRlclJ1bihcblx0XHRgLmpzX19zbGlkZXJgLFxuXHRcdGAuanNfX3NsaWRlci1saXN0YCxcblx0XHRgLmpzX19zbGlkZXItdHJhY2tgLFxuXHRcdGAuanNfX3NsaWRlYCxcblx0XHRgLmpzX19zbGlkZXItYXJyb3dzYCxcblx0XHRgLmpzX19zbGlkZXItcGFnaW5hdGlvbmAsXG5cdFx0YGpzX2RvdGAsXG5cdFx0YGhlcm9fX3NsaWRlci1wYWdpbmF0aW9uLWl0ZW1gXG4gICAgKVxuXHR9XG5cdFxuLy8gIdGB0LvQsNC50LTQtdGAINC90L7QstC+0YHRgtC4XG4gIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuanNfX25ld3Mtc2xpZGVyYCkpIHtcbiAgICBzbGlkZXJSdW4oXG4gICAgICBgLmpzX19uZXdzLXNsaWRlcmAsXG4gICAgICBgLmpzX19uZXdzLXNsaWRlci1saXN0YCxcbiAgICAgIGAuanNfX25ld3Mtc2xpZGVyLXRyYWNrYCxcbiAgICAgIGAuanNfX25ld3Mtc2xpZGVgLFxuICAgICAgYC5qc19fbmV3cy1zbGlkZXItYXJyb3dzYCxcblx0XHRcdGAuanNfX25ld3Mtc2xpZGVyLXBhZ2luYXRpb25gLFxuXHRcdFx0YGpzX25ld3MtZG90YCxcblx0XHRcdGBuZXdzX19zbGlkZXItcGFnaW5hdGlvbi1pdGVtYFxuICAgIClcbiAgfVxuLy8gIdGB0LvQsNC50LTQtdGAINC90LDQv9GA0LDQstC70LXQvdC40LVcbiAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5qc19fcHJvZHVjdC1zbGlkZXJgKSkge1xuICAgIHNsaWRlclJ1bihcbiAgICAgIGAuanNfX3Byb2R1Y3Qtc2xpZGVyYCxcbiAgICAgIGAuanNfX3Byb2R1Y3Qtc2xpZGVyLWxpc3RgLFxuICAgICAgYC5qc19fcHJvZHVjdC1zbGlkZXItdHJhY2tgLFxuICAgICAgYC5qc19fcHJvZHVjdC1zbGlkZWAsXG4gICAgICBgLmpzX19wcm9kdWN0LXNsaWRlci1hcnJvd3NgLFxuXHRcdFx0YC5qc19fcHJvZHVjdC1zbGlkZXItcGFnaW5hdGlvbmAsXG5cdFx0XHRganNfcHJvZHVjdC1kb3RgLFxuXHRcdFx0YHByb2R1Y3RfX3NsaWRlci1wYWdpbmF0aW9uLWl0ZW1gXG4gICAgKVxuXHR9XG5cdFxuLy8gXHQgLy8gIdGB0LvQsNC50LTQtdGAINC90L7QstC+0YHRgtC10Lkg0LTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvRhVxuaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5qc19fY2FzZXNTbGlkZXJgKSkge1xuICBzbGlkZXJSdW4oXG4gICAgYC5qc19fY2FzZXNTbGlkZXJgLFxuICAgIGAuanNfX2Nhc2VzU2xpZGVyLWxpc3RgLFxuICAgIGAuanNfX2Nhc2VzU2xpZGVyLXRyYWNrYCxcbiAgICBgLmpzX19jYXNlc1NsaWRlYCxcbiAgICBgLmpzX19jYXNlc1NsaWRlci1hcnJvd3NgLFxuXHRcdGAuanNfX2Nhc2VzU2xpZGVyLXBhZ2luYXRpb25gLFxuXHRcdGBqc19jYXNlcy1kb3RgLFxuXHRcdGBjYXNlc19fc2xpZGVyLXBhZ2luYXRpb24taXRlbWBcbiAgKVxufVxuXG5cbiAgLy8gaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5qc19fcGFydG5lcnMtc2xpZGVyYCkpIHtcblxuICAvLyAgIHNsaWRlclJ1bihcbiAgLy8gICAgIGAuanNfX3BhcnRuZXJzLXNsaWRlcmAsXG4gIC8vICAgICBgLmpzX19wYXJ0bmVycy1zbGlkZXItbGlzdGAsXG4gIC8vICAgICBgLmpzX19wYXJ0bmVycy1zbGlkZXItdHJhY2tgLFxuICAvLyAgICAgYC5qc19fcGFydG5lcnMtc2xpZGVgLFxuICAvLyAgICAgYC5qc19fcGFydG5lcnMtc2xpZGVyLWFycm93c2BcbiAgLy8gICApXG4gIC8vIH1cbn0pIl19
=======
"use strict";document.addEventListener("DOMContentLoaded",(function(){function e(e,t,n,s,r,i,a,o){var c=document.querySelector(e),d=c.querySelector(t),l=c.querySelector(n),u=c.querySelectorAll(s),v=c.querySelector(r),m=v.children[0],f=v.children[1],_=v.children[2],L=u[0].offsetWidth,g=document.querySelector(i),h=0,p=0,y=0,x=0,E=0,j=0,b=0,q=!1,S=!1,w=!0,A=!0,k=0,M=0,X=(u.length-1)*L,Y=.35*u[0].offsetWidth,W=/([-0-9.]+(?=px))/,C=function(){return-1!==event.type.search("touch")?event.touches[0]:event},D=function(){A&&(l.style.transition="transform .5s"),l.style.transform="translate3d(-".concat(h*L,"px, 0px, 0px)"),m.classList.toggle("disabled",0==h),_.classList.toggle("disabled",h==u.length-1),B(h)},H=function(){var e=C();w&&(A=!0,k=(h+1)*-L,M=(h-1)*-L,p=y=e.clientX,E=e.clientY,l.style.transition="",document.addEventListener("touchmove",I),document.addEventListener("mousemove",I),document.addEventListener("touchend",O),document.addEventListener("mouseup",O),d.classList.remove("grab"),d.classList.add("grabbing")),B(h)},I=function(){var e=C(),t=+l.style.transform.match(W)[0];if(x=y-e.clientX,y=e.clientX,j=E-e.clientY,E=e.clientY,!q&&!S){var n=Math.abs(j);n>7||0==x?(S=!0,w=!1):n<7&&(q=!0)}if(q){if(0==h){if(p<y)return void T(t,0);w=!0}if(h===u.length-1){if(p>y)return void T(t,X);w=!0}if(p>y&&t<k||p<y&&t>M)return void z();l.style.transform="translate3d(".concat(t-x,"px, 0px, 0px)")}B(h)},O=function e(){b=p-y,S=!1,q=!1,document.removeEventListener("touchmove",I),document.removeEventListener("mousemove",I),document.removeEventListener("touchend",e),document.removeEventListener("mouseup",e),d.classList.add("grab"),d.classList.remove("grabbing"),w?(Math.abs(b)>Y&&(p<y?h--:p>y&&h++),p!==y?(w=!1,D()):w=!0):w=!0,B(h)},T=function(e,t){e>=t&&e>t&&(l.style.transform="translate3d(".concat(t,"px, 0px, 0px)")),w=!1,B(h)},z=function(){A=!1,O(),w=!0,B(h)};function B(e){c.querySelectorAll("."+a).forEach((function(t){t.classList.remove("active"),t.dataset.slideIndex==e&&t.classList.add("active")}))}l.style.transform="translate3d(0px, 0px, 0px)",d.classList.add("grab"),l.addEventListener("transitionend",(function(){w=!0,f.innerHTML="".concat(h+1,"/").concat(u.length)})),c.addEventListener("touchstart",(function(e){return H()})),c.addEventListener("mousedown",(function(e){return H()})),v.addEventListener("click",(function(e){var t=e.target;if(t.classList.contains("next"))h++;else{if(!t.classList.contains("prev"))return;h--}D(),B(h)})),c.querySelector(i)&&c.querySelector(i).addEventListener("click",(function(e){c.querySelectorAll("."+a).forEach((function(e){e.classList.remove("active")})),h=e.target.getAttribute("data-slide-index"),e.target.classList.add("active"),D()}));for(var F=0;F<u.length;F++){var G=document.createElement("button");G.classList.add(o),G.classList.add(a),G.setAttribute("data-slide-index",F),g.append(G)}document.querySelectorAll("."+a)[0].classList.add("active")}document.querySelector(".js__slider")&&e(".js__slider",".js__slider-list",".js__slider-track",".js__slide",".js__slider-arrows",".js__slider-pagination","js_dot","hero__slider-pagination-item"),document.querySelector(".js__news-slider")&&e(".js__news-slider",".js__news-slider-list",".js__news-slider-track",".js__news-slide",".js__news-slider-arrows",".js__news-slider-pagination","js_news-dot","news__slider-pagination-item")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
>>>>>>> origin/master
