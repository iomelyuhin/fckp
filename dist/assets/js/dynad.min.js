"use strict";!function(){var t,e=[],n=document.querySelectorAll("[data-da]"),r=[],a=[];if(n.length>0){for(var i=0,d=0;d<n.length;d++){var o=n[d],l=o.getAttribute("data-da");if(""!=l){var c=l.split(","),s=c[1]?c[1].trim():"last",u=c[2]?c[2].trim():"767",p=document.querySelector("."+c[0].trim());c.length>0&&p&&(o.setAttribute("data-da-index",i),e[i]={parent:o.parentNode,index:g(o)},r[i]={element:o,destination:document.querySelector("."+c[0].trim()),place:s,breakpoint:u},i++)}}(t=r).sort((function(t,e){return t.breakpoint>e.breakpoint?-1:1})),t.sort((function(t,e){return t.place>e.place?1:-1}));for(var f=0;f<r.length;f++){var h=r[f].breakpoint;a.push(window.matchMedia("(max-width: "+h+"px)")),a[f].addListener(m)}}function m(t){for(var e=0;e<r.length;e++){var n=r[e],i=n.element,d=n.destination,o=n.place,l="_dynamic_adapt_"+n.breakpoint;if(a[e].matches){if(!i.classList.contains(l)){var c=b(d)[o];"first"===o?c=b(d)[0]:"last"===o&&(c=b(d)[b(d).length]),d.insertBefore(i,d.children[c]),i.classList.add(l)}}else i.classList.contains(l)&&(v(i),i.classList.remove(l))}Math.max(document.documentElement.clientWidth,window.innerWidth||0)}function v(t){var n=t.getAttribute("data-da-index"),r=e[n],a=r.parent,i=r.index,d=b(a,!0)[i];a.insertBefore(t,a.children[d])}function g(t){return Array.prototype.slice.call(t.parentNode.children).indexOf(t)}function b(t,e){for(var n=t.children,r=[],a=0;a<n.length;a++){var i=n[a];(e||null==i.getAttribute("data-da"))&&r.push(a)}return r}m()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR5bmFkLmpzIl0sIm5hbWVzIjpbImFyciIsIm9yaWdpbmFsUG9zaXRpb25zIiwiZGFFbGVtZW50cyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImRhRWxlbWVudHNBcnJheSIsImRhTWF0Y2hNZWRpYSIsImxlbmd0aCIsIm51bWJlciIsImluZGV4IiwiZGFFbGVtZW50IiwiZGFNb3ZlIiwiZ2V0QXR0cmlidXRlIiwiZGFBcnJheSIsInNwbGl0IiwiZGFQbGFjZSIsInRyaW0iLCJkYUJyZWFrcG9pbnQiLCJkYURlc3RpbmF0aW9uIiwicXVlcnlTZWxlY3RvciIsInNldEF0dHJpYnV0ZSIsInBhcmVudCIsInBhcmVudE5vZGUiLCJpbmRleEluUGFyZW50IiwiZWxlbWVudCIsImRlc3RpbmF0aW9uIiwicGxhY2UiLCJicmVha3BvaW50Iiwic29ydCIsImEiLCJiIiwicHVzaCIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJhZGRMaXN0ZW5lciIsImR5bmFtaWNBZGFwdCIsImUiLCJlbCIsImRhQ2xhc3NuYW1lIiwibWF0Y2hlcyIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiYWN0dWFsSW5kZXgiLCJpbmRleE9mRWxlbWVudHMiLCJpbnNlcnRCZWZvcmUiLCJjaGlsZHJlbiIsImFkZCIsImR5bmFtaWNBZGFwdEJhY2siLCJyZW1vdmUiLCJNYXRoIiwibWF4IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50V2lkdGgiLCJpbm5lcldpZHRoIiwiZGFJbmRleCIsIm9yaWdpbmFsUGxhY2UiLCJwYXJlbnRQbGFjZSIsImluZGV4UGxhY2UiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImluZGV4T2YiLCJiYWNrIiwiY2hpbGRyZW5BcnJheSIsImkiLCJjaGlsZHJlbkVsZW1lbnQiXSwibWFwcGluZ3MiOiJBQU1BLGNBRUMsV0FDQSxJQWlIMEJBLEVBakh0QkMsRUFBb0IsR0FDcEJDLEVBQWFDLFNBQVNDLGlCQUFpQixhQUN2Q0MsRUFBa0Is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TUMsRUFBa0JyQixFQUFTb0IsSUFDN0JGLEdBSTRDLE1BQTNDRyxFQUFnQnRELGFBQWEsYUFIakNvRCxFQUFjakMsS0FBS2tDLEdBUXJCLE9BQU9ELEVBL0JSN0IsSUFoRkEiLCJmaWxlIjoiZHluYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEeW5hbWljIEFkYXB0IHYuMVxyXG4vLyBIVE1MIGRhdGEtZGE9XCJ3aGVyZSh1bmlxIGNsYXNzIG5hbWUpLHBvc2l0aW9uKGRpZ2kpLHdoZW4oYnJlYWtwb2ludClcIlxyXG4vLyBlLnguIGRhdGEtZGE9XCJpdGVtLDIsOTkyXCJcclxuLy8gQW5kcmlrYW55Y2ggWWV2aGVuIDIwMjBcclxuLy8gaHR0cHM6Ly93d3cueW91dHViZS5jb20vYy9mcmVlbGFuY2VybGlmZXN0eWxlXHJcblxyXG5cInVzZSBzdHJpY3RcIjtcclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcblx0bGV0IG9yaWdpbmFsUG9zaXRpb25zID0gW107XHJcblx0bGV0IGRhRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1kYV0nKTtcclxuXHRsZXQgZGFFbGVtZW50c0FycmF5ID0gW107XHJcblx0bGV0IGRhTWF0Y2hNZWRpYSA9IFtdO1xyXG5cdC8v0JfQsNC/0L7Qu9C90Y/QtdC8INC80LDRgdGB0LjQstGLXHJcblx0aWYgKGRhRWxlbWVudHMubGVuZ3RoID4gMCkge1xyXG5cdFx0bGV0IG51bWJlciA9IDA7XHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZGFFbGVtZW50cy5sZW5ndGg7IGluZGV4KyspIHtcclxuXHRcdFx0Y29uc3QgZGFFbGVtZW50ID0gZGFFbGVtZW50c1tpbmRleF07XHJcblx0XHRcdGNvbnN0IGRhTW92ZSA9IGRhRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZGEnKTtcclxuXHRcdFx0aWYgKGRhTW92ZSAhPSAnJykge1xyXG5cdFx0XHRcdGNvbnN0IGRhQXJyYXkgPSBkYU1vdmUuc3BsaXQoJywnKTtcclxuXHRcdFx0XHRjb25zdCBkYVBsYWNlID0gZGFBcnJheVsxXSA/IGRhQXJyYXlbMV0udHJpbSgpIDogJ2xhc3QnO1xyXG5cdFx0XHRcdGNvbnN0IGRhQnJlYWtwb2ludCA9IGRhQXJyYXlbMl0gPyBkYUFycmF5WzJdLnRyaW0oKSA6ICc3NjcnO1xyXG5cdFx0XHRcdGNvbnN0IGRhRGVzdGluYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIGRhQXJyYXlbMF0udHJpbSgpKVxyXG5cdFx0XHRcdGlmIChkYUFycmF5Lmxlbmd0aCA+IDAgJiYgZGFEZXN0aW5hdGlvbikge1xyXG5cdFx0XHRcdFx0ZGFFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1kYS1pbmRleCcsIG51bWJlcik7XHJcblx0XHRcdFx0XHQvL9CX0LDQv9C+0LvQvdGP0LXQvCDQvNCw0YHRgdC40LIg0L/QtdGA0LLQvtC90LDRh9Cw0LvRjNC90YvRhSDQv9C+0LfQuNGG0LjQuVxyXG5cdFx0XHRcdFx0b3JpZ2luYWxQb3NpdGlvbnNbbnVtYmVyXSA9IHtcclxuXHRcdFx0XHRcdFx0XCJwYXJlbnRcIjogZGFFbGVtZW50LnBhcmVudE5vZGUsXHJcblx0XHRcdFx0XHRcdFwiaW5kZXhcIjogaW5kZXhJblBhcmVudChkYUVsZW1lbnQpXHJcblx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0Ly/Ql9Cw0L/QvtC70L3Rj9C10Lwg0LzQsNGB0YHQuNCyINGN0LvQtdC80LXQvdGC0L7QsiBcclxuXHRcdFx0XHRcdGRhRWxlbWVudHNBcnJheVtudW1iZXJdID0ge1xyXG5cdFx0XHRcdFx0XHRcImVsZW1lbnRcIjogZGFFbGVtZW50LFxyXG5cdFx0XHRcdFx0XHRcImRlc3RpbmF0aW9uXCI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy4nICsgZGFBcnJheVswXS50cmltKCkpLFxyXG5cdFx0XHRcdFx0XHRcInBsYWNlXCI6IGRhUGxhY2UsXHJcblx0XHRcdFx0XHRcdFwiYnJlYWtwb2ludFwiOiBkYUJyZWFrcG9pbnRcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdG51bWJlcisrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0ZHluYW1pY0FkYXB0U29ydChkYUVsZW1lbnRzQXJyYXkpO1xyXG5cclxuXHRcdC8v0KHQvtC30LTQsNC10Lwg0YHQvtCx0YvRgtC40Y8g0LIg0YLQvtGH0LrQtSDQsdGA0LXQudC60L/QvtC40L3RgtCwXHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZGFFbGVtZW50c0FycmF5Lmxlbmd0aDsgaW5kZXgrKykge1xyXG5cdFx0XHRjb25zdCBlbCA9IGRhRWxlbWVudHNBcnJheVtpbmRleF07XHJcblx0XHRcdGNvbnN0IGRhQnJlYWtwb2ludCA9IGVsLmJyZWFrcG9pbnQ7XHJcblx0XHRcdGNvbnN0IGRhVHlwZSA9IFwibWF4XCI7IC8v0JTQu9GPIE1vYmlsZUZpcnN0INC/0L7QvNC10L3Rj9GC0Ywg0L3QsCBtaW5cclxuXHJcblx0XHRcdGRhTWF0Y2hNZWRpYS5wdXNoKHdpbmRvdy5tYXRjaE1lZGlhKFwiKFwiICsgZGFUeXBlICsgXCItd2lkdGg6IFwiICsgZGFCcmVha3BvaW50ICsgXCJweClcIikpO1xyXG5cdFx0XHRkYU1hdGNoTWVkaWFbaW5kZXhdLmFkZExpc3RlbmVyKGR5bmFtaWNBZGFwdCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdC8v0J7RgdC90L7QstC90LDRjyDRhNGD0L3QutGG0LjRj1xyXG5cdGZ1bmN0aW9uIGR5bmFtaWNBZGFwdChlKSB7XHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZGFFbGVtZW50c0FycmF5Lmxlbmd0aDsgaW5kZXgrKykge1xyXG5cdFx0XHRjb25zdCBlbCA9IGRhRWxlbWVudHNBcnJheVtpbmRleF07XHJcblx0XHRcdGNvbnN0IGRhRWxlbWVudCA9IGVsLmVsZW1lbnQ7XHJcblx0XHRcdGNvbnN0IGRhRGVzdGluYXRpb24gPSBlbC5kZXN0aW5hdGlvbjtcclxuXHRcdFx0Y29uc3QgZGFQbGFjZSA9IGVsLnBsYWNlO1xyXG5cdFx0XHRjb25zdCBkYUJyZWFrcG9pbnQgPSBlbC5icmVha3BvaW50O1xyXG5cdFx0XHRjb25zdCBkYUNsYXNzbmFtZSA9IFwiX2R5bmFtaWNfYWRhcHRfXCIgKyBkYUJyZWFrcG9pbnQ7XHJcblxyXG5cdFx0XHRpZiAoZGFNYXRjaE1lZGlhW2luZGV4XS5tYXRjaGVzKSB7XHJcblx0XHRcdFx0Ly/Qn9C10YDQtdCx0YDQsNGB0YvQstCw0LXQvCDRjdC70LXQvNC10L3RgtGLXHJcblx0XHRcdFx0aWYgKCFkYUVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKGRhQ2xhc3NuYW1lKSkge1xyXG5cdFx0XHRcdFx0bGV0IGFjdHVhbEluZGV4ID0gaW5kZXhPZkVsZW1lbnRzKGRhRGVzdGluYXRpb24pW2RhUGxhY2VdO1xyXG5cdFx0XHRcdFx0aWYgKGRhUGxhY2UgPT09ICdmaXJzdCcpIHtcclxuXHRcdFx0XHRcdFx0YWN0dWFsSW5kZXggPSBpbmRleE9mRWxlbWVudHMoZGFEZXN0aW5hdGlvbilbMF07XHJcblx0XHRcdFx0XHR9IGVsc2UgaWYgKGRhUGxhY2UgPT09ICdsYXN0Jykge1xyXG5cdFx0XHRcdFx0XHRhY3R1YWxJbmRleCA9IGluZGV4T2ZFbGVtZW50cyhkYURlc3RpbmF0aW9uKVtpbmRleE9mRWxlbWVudHMoZGFEZXN0aW5hdGlvbikubGVuZ3RoXTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGRhRGVzdGluYXRpb24uaW5zZXJ0QmVmb3JlKGRhRWxlbWVudCwgZGFEZXN0aW5hdGlvbi5jaGlsZHJlblthY3R1YWxJbmRleF0pO1xyXG5cdFx0XHRcdFx0ZGFFbGVtZW50LmNsYXNzTGlzdC5hZGQoZGFDbGFzc25hbWUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHQvL9CS0L7Qt9Cy0YDQsNGJ0LDQtdC8INC90LAg0LzQtdGB0YLQvlxyXG5cdFx0XHRcdGlmIChkYUVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKGRhQ2xhc3NuYW1lKSkge1xyXG5cdFx0XHRcdFx0ZHluYW1pY0FkYXB0QmFjayhkYUVsZW1lbnQpO1xyXG5cdFx0XHRcdFx0ZGFFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoZGFDbGFzc25hbWUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Y3VzdG9tQWRhcHQoKTtcclxuXHR9XHJcblxyXG5cdC8v0JLRi9C30L7QsiDQvtGB0L3QvtCy0L3QvtC5INGE0YPQvdC60YbQuNC4XHJcblx0ZHluYW1pY0FkYXB0KCk7XHJcblxyXG5cdC8v0KTRg9C90LrRhtC40Y8g0LLQvtC30LLRgNCw0YLQsCDQvdCwINC80LXRgdGC0L5cclxuXHRmdW5jdGlvbiBkeW5hbWljQWRhcHRCYWNrKGVsKSB7XHJcblx0XHRjb25zdCBkYUluZGV4ID0gZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRhLWluZGV4Jyk7XHJcblx0XHRjb25zdCBvcmlnaW5hbFBsYWNlID0gb3JpZ2luYWxQb3NpdGlvbnNbZGFJbmRleF07XHJcblx0XHRjb25zdCBwYXJlbnRQbGFjZSA9IG9yaWdpbmFsUGxhY2VbJ3BhcmVudCddO1xyXG5cdFx0Y29uc3QgaW5kZXhQbGFjZSA9IG9yaWdpbmFsUGxhY2VbJ2luZGV4J107XHJcblx0XHRjb25zdCBhY3R1YWxJbmRleCA9IGluZGV4T2ZFbGVtZW50cyhwYXJlbnRQbGFjZSwgdHJ1ZSlbaW5kZXhQbGFjZV07XHJcblx0XHRwYXJlbnRQbGFjZS5pbnNlcnRCZWZvcmUoZWwsIHBhcmVudFBsYWNlLmNoaWxkcmVuW2FjdHVhbEluZGV4XSk7XHJcblx0fVxyXG5cdC8v0KTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC40L3QtNC10LrRgdCwINCy0L3Rg9GC0YDQuCDRgNC+0LTQuNGC0LXQu9GPXHJcblx0ZnVuY3Rpb24gaW5kZXhJblBhcmVudChlbCkge1xyXG5cdFx0dmFyIGNoaWxkcmVuID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZWwucGFyZW50Tm9kZS5jaGlsZHJlbik7XHJcblx0XHRyZXR1cm4gY2hpbGRyZW4uaW5kZXhPZihlbCk7XHJcblx0fVxyXG5cdC8v0KTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC80LDRgdGB0LjQstCwINC40L3QtNC10LrRgdC+0LIg0Y3Qu9C10LzQtdC90YLQvtCyINCy0L3Rg9GC0YDQuCDRgNC+0LTQuNGC0LXQu9GPIFxyXG5cdGZ1bmN0aW9uIGluZGV4T2ZFbGVtZW50cyhwYXJlbnQsIGJhY2spIHtcclxuXHRcdGNvbnN0IGNoaWxkcmVuID0gcGFyZW50LmNoaWxkcmVuO1xyXG5cdFx0Y29uc3QgY2hpbGRyZW5BcnJheSA9IFtdO1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRjb25zdCBjaGlsZHJlbkVsZW1lbnQgPSBjaGlsZHJlbltpXTtcclxuXHRcdFx0aWYgKGJhY2spIHtcclxuXHRcdFx0XHRjaGlsZHJlbkFycmF5LnB1c2goaSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0Ly/QmNGB0LrQu9GO0YfQsNGPINC/0LXRgNC10L3QtdGB0LXQvdC90YvQuSDRjdC70LXQvNC10L3RglxyXG5cdFx0XHRcdGlmIChjaGlsZHJlbkVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWRhJykgPT0gbnVsbCkge1xyXG5cdFx0XHRcdFx0Y2hpbGRyZW5BcnJheS5wdXNoKGkpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIGNoaWxkcmVuQXJyYXk7XHJcblx0fVxyXG5cdC8v0KHQvtGA0YLQuNGA0L7QstC60LAg0L7QsdGK0LXQutGC0LBcclxuXHRmdW5jdGlvbiBkeW5hbWljQWRhcHRTb3J0KGFycikge1xyXG5cdFx0YXJyLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcclxuXHRcdFx0aWYgKGEuYnJlYWtwb2ludCA+IGIuYnJlYWtwb2ludCkgeyByZXR1cm4gLTEgfSBlbHNlIHsgcmV0dXJuIDEgfSAvL9CU0LvRjyBNb2JpbGVGaXJzdCDQv9C+0LzQtdC90Y/RgtGMXHJcblx0XHR9KTtcclxuXHRcdGFyci5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XHJcblx0XHRcdGlmIChhLnBsYWNlID4gYi5wbGFjZSkgeyByZXR1cm4gMSB9IGVsc2UgeyByZXR1cm4gLTEgfVxyXG5cdFx0fSk7XHJcblx0fVxyXG5cdC8v0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQtSDRgdGG0LXQvdCw0YDQuNC4INCw0LTQsNC/0YLQsNGG0LjQuFxyXG5cdGZ1bmN0aW9uIGN1c3RvbUFkYXB0KCkge1xyXG5cdFx0Y29uc3Qgdmlld3BvcnRfd2lkdGggPSBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsIHdpbmRvdy5pbm5lcldpZHRoIHx8IDApO1xyXG5cdH1cclxufSgpKTtcclxuXHJcbi8qXHJcbmxldCBibG9jayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jbGljaycpO1xyXG5ibG9jay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuXHRhbGVydCgn0JLRgdC1INC+0LogOyknKTtcclxufSk7XHJcbiovXHJcblxyXG4vKlxyXG4vL9Ce0LHRitGP0LLQu9GP0LXQvCDQv9C10YDQtdC80LXQvdC90YvQtVxyXG5jb25zdCBwYXJlbnRfb3JpZ2luYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudF9fYmxvY2tzX2NpdHknKTtcclxuY29uc3QgcGFyZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnRfX2NvbHVtbl9yaXZlcicpO1xyXG5jb25zdCBpdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnRfX2Jsb2NrX2l0ZW0nKTtcclxuXHJcbi8v0KHQu9GD0YjQsNC10Lwg0LjQt9C80LXQvdC10L3QuNC1INGA0LDQt9C80LXRgNCwINGN0LrRgNCw0L3QsFxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgbW92ZSk7XHJcblxyXG4vL9Ck0YPQvdC60YbQuNGPXHJcbmZ1bmN0aW9uIG1vdmUoKXtcclxuXHRjb25zdCB2aWV3cG9ydF93aWR0aCA9IE1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCwgd2luZG93LmlubmVyV2lkdGggfHwgMCk7XHJcblx0aWYgKHZpZXdwb3J0X3dpZHRoIDw9IDk5Mikge1xyXG5cdFx0aWYgKCFpdGVtLmNsYXNzTGlzdC5jb250YWlucygnZG9uZScpKSB7XHJcblx0XHRcdHBhcmVudC5pbnNlcnRCZWZvcmUoaXRlbSwgcGFyZW50LmNoaWxkcmVuWzJdKTtcclxuXHRcdFx0aXRlbS5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XHJcblx0XHR9XHJcblx0fSBlbHNlIHtcclxuXHRcdGlmIChpdGVtLmNsYXNzTGlzdC5jb250YWlucygnZG9uZScpKSB7XHJcblx0XHRcdHBhcmVudF9vcmlnaW5hbC5pbnNlcnRCZWZvcmUoaXRlbSwgcGFyZW50X29yaWdpbmFsLmNoaWxkcmVuWzJdKTtcclxuXHRcdFx0aXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdkb25lJyk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vL9CS0YvQt9GL0LLQsNC10Lwg0YTRg9C90LrRhtC40Y5cclxubW92ZSgpO1xyXG5cclxuKi9cclxuIl19
